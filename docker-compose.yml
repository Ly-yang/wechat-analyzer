# docker-compose.yml
version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:6.0
    container_name: wechat_analyzer_mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: wechat_analyzer
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - wechat_analyzer_network

  # Redis缓存
  redis:
    image: redis:7.2-alpine
    container_name: wechat_analyzer_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - wechat_analyzer_network

  # Flask后端API
  backend:
    build: .
    container_name: wechat_analyzer_backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/wechat_analyzer?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/0
      - FLASK_ENV=production
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - wechat_analyzer_network

  # Celery工作进程
  celery_worker:
    build: .
    container_name: wechat_analyzer_celery
    restart: always
    command: celery -A app.celery worker --loglevel=info
    environment:
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/wechat_analyzer?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/0
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - wechat_analyzer_network

  # Celery定时任务
  celery_beat:
    build: .
    container_name: wechat_analyzer_beat
    restart: always
    command: celery -A app.celery beat --loglevel=info
    environment:
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/wechat_analyzer?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379/0
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - wechat_analyzer_network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: wechat_analyzer_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - wechat_analyzer_network

volumes:
  mongodb_data:
  redis_data:

networks:
  wechat_analyzer_network:
    driver: bridge
